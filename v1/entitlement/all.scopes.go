// Code generated by "scopegen"; DO NOT EDIT.
package entitlement

type ServiceScope struct{}

var Scopes = map[string]string{
	"https://auth.bnk.to/entitlement.read":  "View entitlement data",
	"https://auth.bnk.to/entitlement.write": "Manage entitlement data",
}

var AuthScopes = map[string][]string{
	"/entitlement.EntitlementService/AddEntitlementRequestForCurrentUser": {"https://auth.bnk.to/entitlement.write"},
	"/entitlement.EntitlementService/AddEntitlementRequestForUser":        {"https://auth.bnk.to/entitlement.write"},
	"/entitlement.EntitlementService/DeleteEntitlement":                   {"https://auth.bnk.to/entitlement.write"},
	"/entitlement.EntitlementService/DeleteEntitlementRequest":            {"https://auth.bnk.to/entitlement.write"},
	"/entitlement.EntitlementService/GetAllEntitlementRequests":           {"https://auth.bnk.to/entitlement.read"},
	"/entitlement.EntitlementService/GetAllEntitlements":                  {"https://auth.bnk.to/entitlement.read"},
	"/entitlement.EntitlementService/GetEntitlementForCurrentUser":        {"https://auth.bnk.to/entitlement.read"},
	"/entitlement.EntitlementService/GetEntitlementForUser":               {"https://auth.bnk.to/entitlement.read"},
	"/entitlement.EntitlementService/GetEntitlementForUserAtBank":         {"https://auth.bnk.to/entitlement.read"},
	"/entitlement.EntitlementService/GetEntitlementRequestForCurrentUser": {"https://auth.bnk.to/entitlement.read"},
	"/entitlement.EntitlementService/GetEntitlementRequestForUser":        {"https://auth.bnk.to/entitlement.read"},
	"/entitlement.EntitlementService/GetRoles":                            {"https://auth.bnk.to/entitlement.read"},
}

// Any allows a loose challenge, for claims containing any of the method scopes.
//
// Use All method as a default for OAuth2 style scopes.  Any is useful with more complex scope definitions.
func (svcSc *ServiceScope) Any(method string, claims []string) bool {
	ch := AuthScopes[method]
	for _, s := range ch {
		for _, c := range claims {
			if string(s) == c {
				return true
			}
		}
	}
	return len(ch) == 0
}

// All is the default OAuth2 challenge method, ensuring claims contains all method scopes.
func (svcSc *ServiceScope) All(method string, claims []string) bool {
	ch := AuthScopes[method]
	if len(ch) > len(claims) {
		return false
	}
scopes:
	for _, s := range ch {
		for _, c := range claims {
			if string(s) == c {
				continue scopes
			}
		}
		return false
	}
	return true
}
